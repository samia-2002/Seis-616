{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {
    "InstanceType": {
      "Description": "Server instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": [
        "t2.micro",
        "t2.small"
      ],
      "ConstraintDescription": "Must be a valid EC2 type."
    },
	"KeyPairName": {
		"Description": "Name of your EC2 keypair to enable SSH access",
		"Type": "AWS::EC2::KeyPair::KeyName",
		"ConstraintDescription": "Must be the name of an existing KeyPair"
	},
	"YourIP": {
		"Description": "The current IP address of your workstation (x.x.x.x/32)",
		"Type": "String"
	}
  }, 
  
  "Resources": {
    "EngineeringVpc": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "CidrBlock": "10.0.0.0/18",
        "Tags": [
          {
            "Key": "Environment",
            "Value": "Test"
          }
        ]
      }
    },

    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {}
    },
    "VPCGatewayAttachment": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "EngineeringVpc"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "EngineeringVpc"
        }
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      },
      "DependsOn": [
        "InternetGateway"
      ]
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
            "Ref": "EngineeringVpc"
        },
        "MapPublicIpOnLaunch" : "true",
        "CidrBlock": "10.0.0.0/24",
        "AvailabilityZone" : {
          "Fn::Select" : [ "0", { "Fn::GetAZs" : { "Ref" : "AWS::Region" }}]
        },
        "Tags" : [
          { "Key": "Name",
            "Value": "Website-Public-Subnet"
          }
        ]
      }
    },
    "PublicSubnet1RTassoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet1"
        }
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": {
            "Ref": "EngineeringVpc"
        },
        "MapPublicIpOnLaunch" : "true",
        "CidrBlock": "10.0.1.0/24",
        "AvailabilityZone" : {
          "Fn::Select" : [ "1", { "Fn::GetAZs" : { "Ref" : "AWS::Region" }}]
        },
        "Tags" : [
          { "Key": "Name",
            "Value": "Website-Public-Subnet"
          }
        ]
      }
    },
    "PublicSubnet2RTassoc": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "SubnetId": {
          "Ref": "PublicSubnet2"
        }
      }
    },
    "Web1": {
      "Type": "AWS::EC2::Instance",
      "Properties" : {
	      "KeyName": {"Ref": "KeyPairName"},
        "InstanceType": {"Ref": "InstanceType"},
        "ImageId": "ami-07f463d9d4a6f005f",
        "SubnetId": { "Ref": "PublicSubnet1" },
        "SecurityGroupIds": [
          { "Ref": "WebserverSG"}
        ],
        "UserData": {
            "Fn::Base64": {
            "Fn::Sub": "#!/bin/bash\nyum update -y\nyum install -y git httpd php\nservice httpd start\nchkconfig httpd on\naws s3 cp s3://seis665-public/index.php /var/www/html/"
                  }
        },
        "Tags" : [
          { "Key": "Name",
            "Value": "web1"
          }
        ]
      }
    },
    "Web2": {
      "Type": "AWS::EC2::Instance",
      "Properties" : {
	      "KeyName": {"Ref": "KeyPairName"},
        "InstanceType": {"Ref": "InstanceType"},
        "ImageId": "ami-07f463d9d4a6f005f",
        "SubnetId": { "Ref": "PublicSubnet2" },
        "SecurityGroupIds": [
          { "Ref": "WebserverSG"}
        ],
        "UserData": {
            "Fn::Base64": {
            "Fn::Sub": "#!/bin/bash\nyum update -y\nyum install -y git httpd php\nservice httpd start\nchkconfig httpd on\naws s3 cp s3://seis665-public/index.php /var/www/html/"
                  }
        },
        "Tags" : [
          { "Key": "Name",
            "Value": "web2"
          }
        ]
      }
    },
    "WebserverSG": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": {
            "Ref": "EngineeringVpc"
        },
        "GroupDescription": "Security group rules for webserver host.",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "80",
            "ToPort": "80",
            "CidrIp": "0.0.0.0/0"
          },
		      {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": {"Ref": "YourIP"}		  
		      }
        ]
      }
    },
    "EngineeringLB" : {
    "Type" : "AWS::ElasticLoadBalancingV2::LoadBalancer",
    "Properties" : {
        "Subnets" : [ {"Ref": "PublicSubnet1" },
                       { "Ref": "PublicSubnet2"} ],
        "SecurityGroups": [ { "Ref": "WebserverSG" } ]
    }
  },
"EngineeringWebservers" : {
    "Type" : "AWS::ElasticLoadBalancingV2::TargetGroup",
    "Properties" : {
      "HealthCheckProtocol": "HTTP",
      "HealthCheckPath": "/",
      "HealthCheckIntervalSeconds": 60,
      "TargetType": "instance",
      "VpcId": { "Ref": "EngineeringVpc" },
      "Port": 80,
      "Protocol": "HTTP"
        
    }
  },
"EngineeringListerner" : {
    "Type" : "AWS::ElasticLoadBalancingV2::Listener",
    "Properties" : {
      "LoadBalancerArn": { "Ref": "EngineeringLB" },
      "Port": 80,
      "Protocol": "HTTP",
      "DefaultActions": [{
        "Type": "forward",
        "TargetGroupArn": { "Ref": "EngineeringWebservers" }
    }]
    }
}
  },
  "Outputs": {
    "weburl": {
      "Description": "Webserver URL",
      "Value": {"Fn::GetAtt": ["EngineeringLB", "DNSName"]}    }
  }
}